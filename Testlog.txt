Thu Apr 05 09:47:05 PDT 2018 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Thu Apr 05 09:47:07 PDT 2018 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Feature: Validation of ETL load for INCENTIVE_TGT and INCENTIVE_SUMMARY
Connected to database
Source file is existed at path :- C:\Users\Administrator\eclipse-workspace\incentive\Sourcedata\INCENTIVE_SRC.xlsx
-------Count validation INCENTIVE_TGT----------
Connected to database
Source file date is loaded in database
Source query => SELECT count(*) FROM ( select res.*,count(*) as NoofCycles from (select src.SubscriberId,min(src.IncentiveEffDate) as EffectiveDate ,max(src.enddate) as EndDate,  sum(src.total) as TotalIncentiveAmt,case when h_complete='Complete' then 'Y' ELSE 'N' END AS OverallStatus  from (SELECT ins.*,greatest(ins.incentiveenddate,INS1.incentiveenddate) as enddate,SUM(ins.IncentiveAmount+COALESCE(ins1.IncentiveAmount,0)) as total,   case when ins.IncentiveStep='HealthAssessment'  and ins1.IncentiveStep='PCP Selected' and ins1.IncentiveAmount<>0 then 'Complete'   when ins.IncentiveStep='HealthAssessment'  and ins1.IncentiveStep='PCP Selected' and ins1.IncentiveAmount=0 then 'PCP Started'   when  ins.IncentiveStep<>'HealthAssessment' and ins1.IncentiveStep is null then 'PCP_REC'   when  ins.IncentiveStep='HealthAssessment' and ins1.IncentiveStep is null AND INS.IncentiveEndDate<>'9999-12-31' then 'HA Complete'   when  ins.IncentiveStep='HealthAssessment' and ins1.IncentiveStep is null AND INS.IncentiveEndDate='9999-12-31' then 'HA InComplete'   end as h_complete FROM (select * from INCENTIVE_SRC where incentiveStep="HealthAssessment")INS  left JOIN (select * from INCENTIVE_SRC where incentiveStep<>"HealthAssessment") INS1  ON  INS.SubscriberID= INS1.SubscriberID    AND INS1.IncentiveStep<>"HealthAssessment"  AND INS.IncentiveEndDate = date_sub(INS1.IncentiveEffDate,interval 1 day)  group by ins.SubscriberId,ins.IncentiveEffDate) as src     group by SubscriberId,src.IncentiveEffDate) res   join   (select src.SubscriberId,min(src.IncentiveEffDate) as EffectiveDate ,max(src.enddate) as EndDate,  sum(src.total) as TotalIncentiveAmt,case when h_complete='Complete' then 'Y' ELSE 'N' END AS OverallStatus  from (SELECT ins.*,greatest(ins.incentiveenddate,INS1.incentiveenddate) as enddate,SUM(ins.IncentiveAmount+COALESCE(ins1.IncentiveAmount,0)) as total,   case when ins.IncentiveStep='HealthAssessment'  and ins1.IncentiveStep='PCP Selected' and ins1.IncentiveAmount<>0 then 'Complete'   when ins.IncentiveStep='HealthAssessment'  and ins1.IncentiveStep='PCP Selected' and ins1.IncentiveAmount=0 then 'PCP Started'   when  ins.IncentiveStep<>'HealthAssessment' and ins1.IncentiveStep is null then 'PCP_REC'   when  ins.IncentiveStep='HealthAssessment' and ins1.IncentiveStep is null AND INS.IncentiveEndDate<>'9999-12-31' then 'HA Complete'   when  ins.IncentiveStep='HealthAssessment' and ins1.IncentiveStep is null AND INS.IncentiveEndDate='9999-12-31' then 'HA InComplete'   end as h_complete FROM (select * from INCENTIVE_SRC where incentiveStep="HealthAssessment")INS  left JOIN (select * from INCENTIVE_SRC where incentiveStep<>"HealthAssessment") INS1  ON  INS.SubscriberID= INS1.SubscriberID    AND INS1.IncentiveStep<>"HealthAssessment"  AND INS.IncentiveEndDate = date_sub(INS1.IncentiveEffDate,interval 1 day)  group by ins.SubscriberId,ins.IncentiveEffDate) as src   group by SubscriberId,src.IncentiveEffDate) res1 on res.SubscriberId=res1.SubscriberId and res.EffectiveDate>=res1.EffectiveDate  group by res.SubscriberId,EffectiveDate) SRC 
Number of records in source table : 24
Number of records in target table : 24
1.Count between the source query and target table is matching.

  #Count valiation
  Scenario: To validate the count between INCENTIVE_SRC file and INCENTIVE_TGT table                                                                 # C:/Users/Administrator/eclipse-workspace/incentive/Features/ETLValidation.feature:4
    Given Connection with the database having INCENTIVE_SRC and INCENTIVE_TGT table                                                                  # StepDefinition.javaToMysqlconnection()
    And Source data sheet INCENTIVE_SRC able at the location "C:\Users\Administrator\eclipse-workspace\incentive\Sourcedata\INCENTIVE_SRC.xlsx"      # StepDefinition.sourceDataavailablity(String)
    When Data of the source data sheet is loaded to the INCENTIVE_SRC table.                                                                         # StepDefinition.TemptableLoad()
    And Count query for the source table is available at "C:\Users\Administrator\eclipse-workspace\incentive\Validationqueries\SourceCountQuery.txt" # StepDefinition.Coutnqueryreader(String)
    Then Compare the count of the source INCENTIVE_SRC and target INCENTIVE_TGT table                                                                # StepDefinition.Countvalidation()
-------Data validation INCENTIVE_TGT----------
Data query => SELECT * FROM ( select res.*,count(*) as NoofCycles from (select src.SubscriberId,min(src.IncentiveEffDate) as EffectiveDate ,max(src.enddate) as EndDate,  sum(src.total) as TotalIncentiveAmt,case when h_complete='Complete' then 'Y' ELSE 'N' END AS OverallStatus  from (SELECT ins.*,greatest(ins.incentiveenddate,INS1.incentiveenddate) as enddate,SUM(ins.IncentiveAmount+COALESCE(ins1.IncentiveAmount,0)) as total,   case when ins.IncentiveStep='HealthAssessment'  and ins1.IncentiveStep='PCP Selected' and ins1.IncentiveAmount<>0 then 'Complete'   when ins.IncentiveStep='HealthAssessment'  and ins1.IncentiveStep='PCP Selected' and ins1.IncentiveAmount=0 then 'PCP Started'   when  ins.IncentiveStep<>'HealthAssessment' and ins1.IncentiveStep is null then 'PCP_REC'   when  ins.IncentiveStep='HealthAssessment' and ins1.IncentiveStep is null AND INS.IncentiveEndDate<>'9999-12-31' then 'HA Complete'   when  ins.IncentiveStep='HealthAssessment' and ins1.IncentiveStep is null AND INS.IncentiveEndDate='9999-12-31' then 'HA InComplete'   end as h_complete FROM (select * from INCENTIVE_SRC where incentiveStep="HealthAssessment")INS  left JOIN (select * from INCENTIVE_SRC where incentiveStep<>"HealthAssessment") INS1  ON  INS.SubscriberID= INS1.SubscriberID    AND INS1.IncentiveStep<>"HealthAssessment"  AND INS.IncentiveEndDate = date_sub(INS1.IncentiveEffDate,interval 1 day)  group by ins.SubscriberId,ins.IncentiveEffDate) as src   group by SubscriberId,src.IncentiveEffDate) res   join   (select src.SubscriberId,min(src.IncentiveEffDate) as EffectiveDate ,max(src.enddate) as EndDate,  sum(src.total) as TotalIncentiveAmt,case when h_complete='Complete' then 'Y' ELSE 'N' END AS OverallStatus  from (SELECT ins.*,greatest(ins.incentiveenddate,INS1.incentiveenddate) as enddate,SUM(ins.IncentiveAmount+COALESCE(ins1.IncentiveAmount,0)) as total,   case when ins.IncentiveStep='HealthAssessment'  and ins1.IncentiveStep='PCP Selected' and ins1.IncentiveAmount<>0 then 'Complete'   when ins.IncentiveStep='HealthAssessment'  and ins1.IncentiveStep='PCP Selected' and ins1.IncentiveAmount=0 then 'PCP Started'   when  ins.IncentiveStep<>'HealthAssessment' and ins1.IncentiveStep is null then 'PCP_REC'   when  ins.IncentiveStep='HealthAssessment' and ins1.IncentiveStep is null AND INS.IncentiveEndDate<>'9999-12-31' then 'HA Complete'   when  ins.IncentiveStep='HealthAssessment' and ins1.IncentiveStep is null AND INS.IncentiveEndDate='9999-12-31' then 'HA InComplete'   end as h_complete FROM (select * from INCENTIVE_SRC where incentiveStep="HealthAssessment")INS  left JOIN (select * from INCENTIVE_SRC where incentiveStep<>"HealthAssessment") INS1  ON  INS.SubscriberID= INS1.SubscriberID    AND INS1.IncentiveStep<>"HealthAssessment"  AND INS.IncentiveEndDate = date_sub(INS1.IncentiveEffDate,interval 1 day)  group by ins.SubscriberId,ins.IncentiveEffDate) as src   group by SubscriberId,src.IncentiveEffDate) res1 on res.SubscriberId=res1.SubscriberId and res.EffectiveDate>=res1.EffectiveDate  group by res.SubscriberId,EffectiveDate) SRC JOIN (SELECT * FROM INCENTIVE_TGT ORDER BY SubscriberId,EffectiveDate DESC) AS TGT   ON SRC.SubscriberId=TGT.SubscriberId and src.EffectiveDate=tgt.EffectiveDate  WHERE SRC.SubscriberId<>TGT.SubscriberId  OR SRC.EffectiveDate<>TGT.EffectiveDate  OR SRC.EndDate<>TGT.EndDate  OR SRC.TotalIncentiveAmt<>TGT.TotalIncentiveAmt  OR SRC.OverallStatus<>TGT.OverallStatus  OR SRC.NoofCycles<>TGT.NoofCycles 
Data loaded to INCENTIVE_TGT table
2.Data is matching with source and target

  #Data validation INCENTIVE_TGT
  Scenario: Validation of Data between INCENTIVE_SRC file and INCENTIVE_TGT table                                                                    # C:/Users/Administrator/eclipse-workspace/incentive/Features/ETLValidation.feature:11
    Given Data query for the source table is available at "C:\Users\Administrator\eclipse-workspace\incentive\Validationqueries\Sourcedataquery.txt" # StepDefinition.Dataqueryreader(String)
    When the target and source tables are ready                                                                                                      # StepDefinition.Dataloadcheck()
    Then validating the data between source and target table INCENTIVE_TGT                                                                           # StepDefinition.Datavalidation_INCENTIVE_TGT()
Thu Apr 05 09:47:08 PDT 2018 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Connected to database
---------------------Data validation INCENTIVE_SUMMARY------
Value between source and target query for column TotalIncentivesteps is matching.
Value between source and target query for column Step1Complete is matching.
Value between source and target query for column AllStepComplete is matching.
Value between source and target query for column StepsIncomplete is matching.
Value between source and target query for column TotalIncentivePaid is matching.
Value between source and target query for column TotalIncentiveMember is matching.
3.Data validation between INCENTIVE_TGT and INCENTIVE_SUMMARY is passed

  #Data Valiation INCENTIVE_SUMMARY
  Scenario: Validation of data between INCENTIVE_TGT table and INCENTIVE_SUMMARY table                                                                  # C:/Users/Administrator/eclipse-workspace/incentive/Features/ETLValidation.feature:16
    Given Connection with the database having INCENTIVE_TGT and INCENTIVE_SUMMARY tables                                                                # StepDefinition.dbconnectionforsmry()
    When Source Query for the INCENTIVE_TGT is available at "C:\Users\Administrator\eclipse-workspace\incentive\Validationqueries\Srcsummaryquery.txt". # StepDefinition.Sourcequerysmry(String)
    And Target Query for the INCENTIVE_SUMMARY is available at "C:\Users\Administrator\eclipse-workspace\incentive\Validationqueries\Tgtsummaryquery".  # StepDefinition.targetquerysmry(String)
    Then Compare the source incentive query data with target summary query data.                                                                        # StepDefinition.Datavalidationsmry()
---------------------Duplicate validation  INCENTIVE_TGT-----------------------
Data loaded to INCENTIVE_TGT table
4.No duplicates in INCENTIVE_TGT : Duplicate validation passed

  #Duplicate Validation INCENTIVE_TGT
  Scenario: Validation of duplicates in the INCENTIVE_TGT table                       # C:/Users/Administrator/eclipse-workspace/incentive/Features/ETLValidation.feature:22
    Given Data load is completed for the INCENTIVE_TGT table i.e number of records >1 # StepDefinition.Dataloadcheck(int)
    Then Validating the table for duplicate records                                   # StepDefinition.Duplicatevalidation()
-----------Metadata validation---------
5.1 Source file columns' name matches with INCENTIVE_SRC table columns' name.
5.2 Metadata for table INCENTIVE_TGT is correct.

  #Metadata Validation Source file and INCENTIVE_TGT
  Scenario: Verify the metadata between INCENTIVE_SRC and INCENTIVE_TGT # C:/Users/Administrator/eclipse-workspace/incentive/Features/ETLValidation.feature:26
    Then Validating metadata for INCENTIVE_SRC and INCENTIVE_TGT        # StepDefinition.metaDatavalidation()

5 Scenarios (5 passed)
15 Steps (15 passed)
0m3.165s

